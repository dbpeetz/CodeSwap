@model CRNGroupApp.Data.ShoppingList

@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h2>Add</h2>

    <div class="form-horizontal">
        <h4>ShoppingList</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*Uncomment at Clients request*@
        @*<div class="form-group">
                @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="color-wrapper">
                    @*<input type="text" name="custom_color" placeholder="#FFFFFF" id="pickcolor" class="call-picker">*@
                    @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "call-picker", name = "custom_color", type = "text", placeholder = "#FFFFFFF", id = "pickcolor" } })
                    <div class="color-holder call-picker"></div>
                    <div class="color-picker" id="color-picker" style="display: none"></div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Uncomment at Clients request*@
        @*<div class="form-group">
                @Html.LabelFor(model => model.CreatedUtc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedUtc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedUtc, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*Uncomment at Clients request*@
        @*<div class="form-group">
                @Html.LabelFor(model => model.ModifiedUtc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModifiedUtc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModifiedUtc, "", new { @class = "text-danger" })
                </div>
            </div>*@
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/colorwheel.js")
}
